{"version":3,"file":"components-StepWizard-StepWizard-stories-mdx.2a0efb28.iframe.bundle.js","mappings":";AAgDA;AACA;AACA;AACA;AACA;;;;;ACgBA","sources":["webpack://@lokalise/louis/./src/components/StepWizard/components/HorizontalPageCounter/styles.ts","webpack://@lokalise/louis/./src/components/Toast/styles.ts"],"sourcesContent":["import { css, modifier, styled } from '@lokalise/styled';\n\nimport { spacing, typography, value } from '../../../../utils/theme';\nimport { Button } from '../../../Button';\n\nexport const PageCounterContainer = styled.div`\n\twidth: 100%;\n\tposition: relative;\n\tmargin: ${spacing(4)} 0;\n`;\n\nexport const PagesContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: flex-start;\n\tjustify-content: space-evenly;\n`;\n\nexport const PageLabelContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: ${spacing(2)};\n\tz-index: 1;\n`;\n\nexport const PageNumber = styled(Button)<{ selected: boolean }>`\n\t/**\n\t * Base style and the styled component styles have the same specificity. We cannot control the order in which styled component inserts the styled classes.\n\t * Increase the specificity to always ensure that base styles are overridden.\n\t * TODO : Use CSS layers and remove the double specificity.\n\t */\n\t&& {\n\t\tborder-radius: 50%;\n\t\twidth: 30px;\n\t\theight: 30px;\n\n\t\t${typography('body.caption.default')};\n\t\tborder-color: ${value('color.border.default')};\n\t\tcolor: ${value('color.text.light.default')};\n\t\tbackground-color: ${value('color.background.surface.default')};\n\n\t\t${modifier(\n\t\t\t'selected',\n\t\t\tcss`\n\t\t\t\t${typography('body.caption.strong')};\n\t\t\t\tborder-color: ${value('color.border.active')};\n\t\t\t\tcolor: ${value('color.text.active')};\n\t\t\t\tbackground-color: ${value('color.background.active')};\n\t\t\t`,\n\t\t)}\n\n\t\t&:hover:not([disabled]):not([aria-expanded='true']) {\n\t\t\tborder-color: ${value('color.background.action.primary.hover')};\n\t\t\tbackground-color: ${value('color.background.action.primary.hover')};\n\t\t\tcolor: ${value('color.text.inverse')};\n\t\t}\n\n\t\t&:active:not([disabled]):not([aria-expanded='true']),\n\t\t&:focus:active:not([disabled]):not([aria-expanded='true']) {\n\t\t\tborder-color: ${value('color.background.action.primary.hover')};\n\t\t\tbackground-color: ${value('color.background.action.primary.hover')};\n\t\t\tcolor: ${value('color.text.inverse')};\n\t\t}\n\n\t\t&:disabled {\n\t\t\tbackground-color: ${value('color.background.disabled')};\n\t\t\tcolor: ${value('color.text.disabled')};\n\t\t\tborder-color: ${value('color.border.disabled')};\n\t\t}\n\t}\n`;\n\nexport const PageLabel = styled.div`\n\ttext-align: center;\n\twidth: 100%;\n\t${typography('body.small.default')}\n`;\n\nexport const BackgroundLine = styled.div`\n\twidth: 100%;\n\theight: 1px;\n\tbackground: ${value('color.border.light')};\n\tposition: absolute;\n\tmargin-top: 14px;\n`;\n","import { css, excludeProps, modifier, styled } from '@lokalise/styled';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/ReactToastify.css';\n\nimport { spacing, typography, value } from '../../utils/theme';\nimport { IconButton } from '../IconButton';\nimport type { IconButtonProps } from '../IconButton';\nimport type { PressableProps } from '../Pressable';\nimport { Pressable } from '../Pressable';\n\nexport const CloseIconButton = styled(IconButton)<IconButtonProps>`\n\topacity: 0;\n\ttransition: opacity 0.2s;\n`;\n\nexport const TypeIcon = styled.div.withConfig({\n\tshouldForwardProp: excludeProps(['type']),\n})`\n\tflex-basis: 16px;\n\tflex-shrink: 0;\n\tflex-grow: 0;\n\theight: 20px;\n\tdisplay: flex;\n\talign-items: center;\n`;\n\nexport const Content = styled.div`\n\twidth: 100%;\n\tflex-shrink: 1;\n\tflex-grow: 1;\n\tdisplay: grid;\n\tgrid-template-columns: 1fr;\n\tgap: ${spacing(1)};\n`;\n\nexport const Title = styled.span`\n\t${typography('body.caption.strong')};\n\tdisplay: -webkit-box;\n\ttext-overflow: ellipsis;\n\t-webkit-line-clamp: 2;\n\t-webkit-box-orient: vertical;\n\tword-break: normal;\n\toverflow: hidden;\n`;\n\nexport const Description = styled.span`\n\t${typography('body.caption.default')};\n\tdisplay: -webkit-box;\n\ttext-overflow: ellipsis;\n\t-webkit-line-clamp: 8;\n\t-webkit-box-orient: vertical;\n\tword-break: normal;\n\toverflow: hidden;\n`;\n\nexport const ToastAnchor = styled(Pressable)<PressableProps>`\n\t${typography('body.link.caption')};\n\ttext-decoration: underline;\n\tcursor: pointer;\n\tcolor: ${value('color.text.default')};\n\n\t${modifier(\n\t\t({ href }: PressableProps) => !href,\n\t\tcss`\n\t\t\tbackground-color: transparent;\n\t\t\tborder: none;\n\t\t\tfont-family: inherit;\n\t\t\tpadding: 0;\n\t\t`,\n\t)}\n\n\t&:hover {\n\t\topacity: 0.7;\n\t}\n\ttransition: opacity ${value('motion.speed.1')};\n`;\n\nexport const StyledToastContainer = styled(ToastContainer)`\n\ttransform: translate3d(0, 0, 9999px);\n\tposition: fixed;\n\tfont-family: inherit;\n\twidth: 332px;\n\tmin-height: 44px;\n\tbox-sizing: border-box;\n\tpadding: 0;\n\n\t--toastify-color-light: ${value('color.text.default')};\n\t--toastify-color-dark: var(--toastify-color-light);\n\t--toastify-color-info: ${value('color.background.info')};\n\t--toastify-color-success: ${value('color.background.success')};\n\t--toastify-color-warning: ${value('color.background.warning')};\n\t--toastify-color-error: ${value('color.background.danger')};\n\t//--toastify-color-transparent: rgba(255, 255, 255, 0.7);\n\n\t--toastify-icon-color-info: ${value('color.text.info')};\n\t--toastify-icon-color-success: ${value('color.text.success')};\n\t--toastify-icon-color-warning: ${value('color.text.warning')};\n\t--toastify-icon-color-error: ${value('color.text.danger')};\n\n\t//--toastify-toast-width: 320px;\n\t//--toastify-toast-background: #fff;\n\t//--toastify-toast-min-height: 64px;\n\t//--toastify-toast-max-height: 800px;\n\t--toastify-font-family: ${value('font.family.default')};\n\t--toastify-z-index: ${value('zIndex.toast')};\n\n\t--toastify-text-color-light: ${value('color.text.default')};\n\t--toastify-text-color-dark: var(--toastify-text-color-light);\n\n\t--toastify-text-color-info: var(--toastify-text-color-light);\n\t--toastify-text-color-success: var(--toastify-text-color-light);\n\t--toastify-text-color-warning: var(--toastify-text-color-light);\n\t--toastify-text-color-error: var(--toastify-text-color-light);\n\n\t//--toastify-spinner-color: #616161;\n\t//--toastify-spinner-color-empty-area: #e0e0e0;\n\n\t// Used when no type is provided\n\t// toast(\"**hello**\")\n\t//--toastify-color-progress-light: linear-gradient(to right, #4cd964, #5ac8fa, #007aff, #34aadc, #5856d6, #ff2d55);\n\t// Used when no type is provided\n\t--toastify-color-progress-dark: var(--toastify-color-progress-light);\n\t--toastify-color-progress-info: var(--toastify-icon-color-info);\n\t--toastify-color-progress-success: var(--toastify-icon-color-success);\n\t--toastify-color-progress-warning: var(--toastify-icon-color-warning);\n\t--toastify-color-progress-error: var(--toastify-icon-color-error);\n\n\t.Toastify__toast {\n\t\tbox-sizing: border-box;\n\t\tpadding: ${spacing(3, 2)};\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\talign-items: flex-start;\n\t\tcolor: ${value('color.text.default')};\n\t\tbox-shadow: none;\n\t\tcursor: default;\n\t\tmin-height: 44px;\n\t\toverflow: visible;\n\t\tborder-radius: ${value('radius.notification')};\n\t\tmargin-bottom: ${spacing(2)};\n\n\t\t&:hover ${CloseIconButton} {\n\t\t\topacity: 1;\n\t\t}\n\t}\n\n\t.Toastify__toast-icon {\n\t\tmargin: 0;\n\t}\n\n\t.Toastify__toast.Toastify__toast--success {\n\t\tbackground-color: var(--toastify-color-success);\n\n\t\t.Toastify__toast-icon {\n\t\t\tcolor: var(--toastify-icon-color-success);\n\t\t}\n\t}\n\n\t.Toastify__toast.Toastify__toast--error {\n\t\tbackground-color: var(--toastify-color-error);\n\n\t\t.Toastify__toast-icon {\n\t\t\tcolor: var(--toastify-icon-color-error);\n\t\t}\n\t}\n\n\t.Toastify__toast.Toastify__toast--warning {\n\t\tbackground-color: var(--toastify-color-warning);\n\n\t\t.Toastify__toast-icon {\n\t\t\tcolor: var(--toastify-icon-color-warning);\n\t\t}\n\t}\n\n\t.Toastify__toast.Toastify__toast--info {\n\t\tbackground-color: var(--toastify-color-info);\n\n\t\t.Toastify__toast-icon {\n\t\t\tcolor: var(--toastify-icon-color-info);\n\t\t}\n\t}\n\n\t.Toastify__toast-body {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\talign-items: flex-start;\n\t\tgap: ${spacing(2)};\n\t\tpadding: 0;\n\t}\n`;\n"],"names":[],"sourceRoot":""}