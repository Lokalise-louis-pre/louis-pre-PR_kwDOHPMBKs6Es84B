{"version":3,"file":"foundations-designTokens-motion-mdx.241e52a5.iframe.bundle.js","mappings":";;;AAkBA;;;;;AAMA;;;;;;;;;AAUA;;AAGA","sources":["webpack://@lokalise/louis/./src/foundations/designTokens/motion.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/louis/louis/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {styled, useTheme} from '@lokalise/styled';\nimport {Meta, Unstyled} from '@storybook/addon-docs';\nimport {getTokenEntries} from './tokenValues';\nexport const Motion = () => {\n  const _components = Object.assign({\n    code: \"code\"\n  }, _provideComponents());\n  const theme = useTheme();\n  const StyledContainer = (styled.div)`\n\t\tmin-height: 500px;\n\t\tpadding: 20px;\n\t`;\n  const ItemBlock = (styled.div)`\n\t\twidth: 50px;\n\t\theight: 50px;\n\t\tborder: 1px solid #2a9141;\n\t\tbackground-color: #b1debb;\n\t`;\n  const ItemWrapper = (styled.div)`\n\t\tmax-width: 600px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 10px;\n\t\tjustify-content: space-between;\n\t\t&:hover {\n\t\t\tmax-width: 700px;\n\t\t}\n\t`;\n  const StyledCode = (styled.span)`\n\t\tmin-width: 430px;\n\t`;\n  const motionOptions = getTokenEntries(theme.motion);\n  console.log(motionOptions);\n  return _jsx(StyledContainer, {\n    children: motionOptions.map(({key, tokenValue}) => {\n      const cssValue = tokenValue.includes('ms') ? {\n        transition: `all ${tokenValue}`\n      } : {\n        transition: `all 1s ${tokenValue}`\n      };\n      return _jsxs(ItemWrapper, {\n        style: cssValue,\n        children: [_jsx(StyledCode, {\n          children: _jsxs(_components.code, {\n            children: [\" value('motion.\", key, \"'): \", tokenValue]\n          })\n        }), _jsx(ItemBlock, {})]\n      });\n    })\n  });\n};\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      ul: \"ul\",\n      li: \"li\",\n      a: \"a\",\n      h3: \"h3\",\n      pre: \"pre\",\n      code: \"code\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(Meta, {\n        title: \"Foundations/Design Tokens/Motion\"\n      }), \"\\n\", _jsx(_components.h1, {\n        id: \"motion\",\n        children: \"Motion\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"#overview\",\n            children: \"Overview\"\n          })\n        }), \"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.a, {\n            href: \"#motion-options\",\n            children: \"Motion Options\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(\"h2\", {\n        id: \"overview\",\n        children: \"Overview\"\n      }), \"\\n\", _jsx(_components.h3, {\n        id: \"installation\",\n        children: \"Installation\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-bash\",\n          children: \"npm install @lokalise/louis\\n\"\n        })\n      }), \"\\n\", _jsx(_components.h3, {\n        id: \"usage\",\n        children: \"Usage\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-tsx\",\n          children: \"import { value } from '@lokalise/louis';\\nimport { styled } from '@lokalise/styled';\\n\\nconst StyledBox = styled.button`\\n\\ttransition: all ${value('motion.speed.1')};\\n`;\\n\"\n        })\n      }), \"\\n\", _jsx(\"h2\", {\n        id: \"examples\",\n        children: \"Motion Options\"\n      }), \"\\n\", _jsx(Unstyled, {\n        children: _jsx(Motion, {})\n      })]\n    });\n  }\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}